name: Deploy static content to Pages

on:
  push:
    branches: [main]

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy-tts-function:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Python dependencies
        working-directory: ./functions
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Deploy TTS Function
        run: |
          gcloud functions deploy kick-tts \
            --gen2 \
            --runtime=python310 \
            --region=us-west1 \
            --source=./functions \
            --entry-point=main \
            --trigger-http \
            --allow-unauthenticated \
            --quiet

  deploy-auth-function:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Python dependencies
        working-directory: ./auth
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Deploy Auth Function
        run: |
          gcloud functions deploy kick-auth \
            --gen2 \
            --runtime=python310 \
            --region=us-west1 \
            --source=./auth \
            --entry-point=auth_handler \
            --trigger-http \
            --allow-unauthenticated \
            --quiet

  deploy-oauth-function:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Python dependencies
        working-directory: ./oauth
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Deploy OAuth Function
        run: |
          gcloud functions deploy kick-oauth \
            --gen2 \
            --runtime=python310 \
            --region=us-west1 \
            --source=./oauth \
            --entry-point=oauth_handler \
            --trigger-http \
            --allow-unauthenticated \
            --quiet

  deploy-control-function:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Python dependencies
        working-directory: ./control
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Test
        working-directory: ./control
        run: |
          python -m pytest -v ./test

      - name: Deploy Control Function
        run: |
          gcloud functions deploy api-control \
            --gen2 \
            --runtime=python310 \
            --region=us-west1 \
            --source=./control \
            --entry-point=main \
            --trigger-http \
            --allow-unauthenticated \
            --quiet

  # deploy-ws:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Setup SSH
  #       uses: webfactory/ssh-agent@v0.9.0
  #       with:
  #         ssh-private-key: ${{ secrets.SSH_KEY }}

  #     - name: Run Deploy Script
  #       working-directory: ./ws
  #       run: |
  #         ./deploy-ws.sh
  #       env:
  #         REMOTE_USER: ${{ vars.REMOTE_USER }}
  #         REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
  #         REMOTE_DIR: ${{ vars.REMOTE_DIR }}
  #         BINARY_NAME: ${{ vars.BINARY_NAME }}
  #         REQUIREMENTS_NAME: ${{ vars.REQUIREMENTS_NAME }}
  #         SERVICE_NAME: ${{ vars.SERVICE_NAME }}

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: true

      - name: Run Build
        run: |
          pnpm run build
        env:
          VITE_API_IMGUR_CLIENT_ID: ${{ vars.VITE_API_IMGUR_CLIENT_ID }}
          VITE_CLERK_PUBLISHABLE_KEY: ${{ secrets.VITE_CLERK_PUBLISHABLE_KEY }}
          VITE_AUTH_URL: ${{ vars.VITE_AUTH_URL }}
          VITE_OAUTH_URL: ${{ vars.VITE_OAUTH_URL }}

      - name: Create CNAME file
        run: |
          echo "cheesybot.xyz" > ./dist/CNAME

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./dist"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  deploy-cdk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: true

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Run Build
        working-directory: ./cdk
        run: |
          pnpm run build

      - name: Deploy CDK
        working-directory: ./cdk
        run: |
          pnpm cdk deploy --require-approval never
